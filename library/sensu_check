#!/usr/bin/env ruby
require 'rubygems'
require 'antsy'

def set_arg_to_bool(var, default = true)
  if var == 'false' || var == false
    return false
  elsif var == 'true' || var == true
    return true
  end
  default
end

# defaults
INTERVAL = 30

args = Antsy.args

name = args[:name]
use_sudo = set_arg_to_bool(args[:use_sudo], false)
auto_resolve = set_arg_to_bool(args[:auto_resolve], true)
interval = args[:interval] || INTERVAL
occurrences = args[:occurrences] || 2
plugin = args[:plugin]
plugin_args = args[:args] || ''

plugin_path = "/etc/sensu/plugins/#{plugin}"
check_path = "/etc/sensu/conf.d/checks/#{name}.json"

command = args[:command]
command = use_sudo ? "sudo #{plugin_path} #{plugin_args}" : "#{plugin_path} #{plugin_args}" unless command

Antsy.fail! "argument 'name' is required" unless name and not name.empty?
Antsy.fail! "argument 'plugin' or 'command' is required" unless command and not command.empty?

check = {
  'checks' => {
    name => {
      'command' => command,
      'standalone' => true,
      'handlers' => [ 'pagerduty' ],
      'interval' => interval.to_i,
      'notification' => "#{name} check failed",
      'occurrences' => occurrences.to_i,
      'auto_resolve' => auto_resolve
    }
  }
}

if File.exists?(check_path) and (JSON.parse(File.read(check_path)) == check)
  Antsy.no_change!
else
  File.open(check_path, 'w') do |f|
    f.write JSON.pretty_generate(check)
  end
  Antsy.changed!
end
